name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-python:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: List files
      run: ls -Rl

  create-activate-venv:
    runs-on: ubuntu-latest
    needs: setup-python
    steps:

    - name: List files
      run: ls -Rl

    - name: Install virtual environment
      run: pip install virtualenv

    - name: Create and activate virtual environment
      run: python -m virtualenv .env

  install-dependencies:
    runs-on: ubuntu-latest
    needs: create-activate-venv
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: pip install -r requirements.txt

  run-tests:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run tests
      run: echo "Running tests" # Replace with actual test command

  build-docker-image:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: echo "docker build -t my-app ."

  # push-docker-image:
  #   runs-on: ubuntu-latest
  #   needs: build-docker-image
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Log in to DockerHub
  #     env:
  #       DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #       DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  #     run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

  #   - name: Push Docker image to DockerHub
  #     run: docker push my-app